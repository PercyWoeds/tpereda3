{"changed":false,"filter":false,"title":"facturas_controller.rb","tooltip":"/app/controllers/facturas_controller.rb","value":"include UsersHelper\ninclude CustomersHelper\ninclude ServicesHelper\nrequire \"open-uri\"\n \nclass FacturasController < ApplicationController\n  \n    $: << Dir.pwd  + '/lib'\n\n # before_filter :authenticate_user!\n \n \n \n\n  def reportes\n  \n    @company=Company.find(1)          \n    @fecha = params[:fecha1]    \n    \n    @parte_rpt = @company.get_parte_1(@fecha)\n    \n    \n    case params[:print]\n      when \"To PDF\" then \n        begin \n         render  pdf: \"Ordenes \",template: \"varillajes/parte_rpt.pdf.erb\",locals: {:varillajes => @parte_rpt}\n        \n        end   \n      when \"To Excel\" then render xlsx: 'exportxls'\n      else render action: \"index\"\n    end\n  end\n  \n  def reportes2 \n  \n    @company=Company.find(1)          \n    @fecha = params[:fecha1]    \n    \n    @parte_rpt = @company.get_parte_1(@fecha)\n    \n    \n    case params[:print]\n      when \"To PDF\" then \n        begin \n         render  pdf: \"Ordenes \",template: \"varillajes/parte2_rpt.pdf.erb\",locals: {:varillajes => @parte_rpt}\n        \n        end   \n      when \"To Excel\" then render xlsx: 'exportxls'\n      else render action: \"index\"\n    end\n  end\n  \n  def reportes3 \n  \n    @company=Company.find(1)          \n    @fecha1 = params[:fecha1]    \n    @fecha2 = params[:fecha2]    \n    \n    @contado_rpt = @company.get_parte_2(@fecha1,@fecha2)\n    \n    \n    case params[:print]\n      when \"To PDF\" then \n        begin \n         render  pdf: \"Ordenes \",template: \"varillajes/parte3_rpt.pdf.erb\",locals: {:varillajes => @contado_rpt}\n        \n        end   \n      when \"To Excel\" then render xlsx: 'exportxls'\n      else render action: \"index\"\n    end\n  end\n\ndef reportes4 \n    $lcFacturasall = '1'\n\n    @company=Company.find(1)          \n    @fecha1 = params[:fecha1]    \n    @fecha2 = params[:fecha2]    \n    @moneda = params[:moneda_id]    \n    @current_user_id = current_user.id \n    \n    if current_user.email == 'gestor.comercial.1@tpereda.com.pe' || current_user.email =='gestor.comercial.2@tpereda.com.pe' || current_user.email =='gestor.comercial.3@tpereda.com.pe'\n      @facturas_rpt = @company.get_facturas_day_usuario(@fecha1,@fecha2,@moneda,@current_user_id)          \n    else\n      @facturas_rpt = @company.get_facturas_day(@fecha1,@fecha2,@moneda)          \n    end \n    \n    @total1  = @company.get_facturas_by_day_value(@fecha1,@fecha2,@moneda,\"subtotal\")  \n    @total2  = @company.get_facturas_by_day_value(@fecha1,@fecha2,@moneda,\"tax\")  \n    @total3  = @company.get_facturas_by_day_value(@fecha1,@fecha2,@moneda,\"total\")  \n    \n    \n    case params[:print]\n      when \"To PDF\" then \n        begin \n         render  pdf: \"Facturas \",template: \"facturas/rventas_rpt.pdf.erb\",locals: {:facturas => @facturas_rpt},\n         :orientation      => 'Landscape',\n         :header => {\n           :spacing => 5,\n                           :html => {\n                     :template => 'layouts/pdf-header.html',\n                           right: '[page] of [topage]'\n                  }\n               }\n               \n\n        end   \n      when \"To Excel\" then render xlsx: 'exportxls'\n      else render action: \"index\"\n    end\n  end\n  \n  def reportes5\n    $lcFacturasall = '1'\n\n    @company=Company.find(1)          \n    @fecha1 = params[:month].to_i    \n    @fecha2 = params[:year].to_i    \n    \n    puts \"meses\"\n    puts @fecha1\n    puts @fecha2\n    \n    @moneda = params[:moneda_id]    \n    \n    @current_user_id = current_user.id \n    \n    @facturas_rpt = @company.get_facturas_day_month(@moneda,@fecha1,@fecha2)          \n    \n    \n    \n    case params[:print]\n      when \"To PDF\" then \n        begin \n         render  pdf: \"Facturas \",template: \"facturas/rventas_rpt.pdf.erb\",locals: {:facturas => @facturas_rpt},\n         :orientation      => 'Landscape',\n         :header => {\n           :spacing => 5,\n                           :html => {\n                     :template => 'layouts/pdf-header.html',\n                           right: '[page] of [topage]'\n                  }\n               }\n               \n\n        end   \n      when \"To Excel\" then render xlsx: 'exportxls'\n      else render action: \"index\"\n    end\n  end\n  \n\n  \ndef reportes03\n\n\n    @company=Company.find(1)          \n    @fecha1 = params[:fecha1]    \n    @fecha2 = params[:fecha2]    \n    @moneda = params[:moneda_id]    \n\n    @facturas_rpt = @company.get_ventas_combustibles(@fecha1,@fecha2)          \n    \n    \n    case params[:print]\n      when \"To PDF\" then \n        begin \n         render  pdf: \"Facturas \",template: \"facturas/rventas03_rpt.pdf.erb\",\n         locals: {:facturass => @facturas_rpt},\n         :orientation      => 'Landscape',\n         \n         :header => {\n           :spacing => 5,\n                           :html => {\n                     :template => 'layouts/pdf-header.html',\n                           right: '[page] of [topage]'\n                  }\n               }\n               \n               \n        end   \n      when \"To Excel\" then render xlsx: 'exportxls'\n      else render action: \"index\"\n    end\n  end\n  \ndef reportes05\n\n\n    @company=Company.find(1)          \n    @fecha1 = params[:fecha1]    \n    @fecha2 = params[:fecha2]    \n    @moneda = params[:moneda_id]    \n\n    @facturas_rpt = @company.get_ventas_combustibles_producto(@fecha1,@fecha2)          \n    \n    \n    case params[:print]\n      when \"To PDF\" then \n        begin \n         render  pdf: \"Facturas \",template: \"facturas/rventas05_rpt.pdf.erb\",\n         locals: {:facturass => @facturas_rpt},\n         :orientation      => 'Landscape',\n         \n         :header => {\n           :spacing => 5,\n                           :html => {\n                     :template => 'layouts/pdf-header.html',\n                           right: '[page] of [topage]'\n                  }\n               }\n               \n               \n        end   \n      when \"To Excel\" then render xlsx: 'reportes05'\n        \n      else render action: \"index\"\n    end\n  end\n\n  def discontinue\n    \n    @facturasselect = Factura.find(params[:products_ids])\n\n    for item in @guiasselect\n        begin\n          a = item.id\n          b = item.remite_id               \n          new_invoice_guia = Deliverymine.new(:mine_id =>$minesid, :delivery_id =>item.id)          \n          new_invoice_guia.save\n           \n        \n         end              \n    end\n  end  \n  def excel\n\n    @company=Company.find(1)          \n    @fecha1 = params[:fecha1]    \n    @fecha2 = params[:fecha2]\n\n    @facturas_rpt = @company.get_facturas_day(@fecha1,@fecha2)      \n\n    respond_to do |format|\n      format.html    \n        format.xls # { send_data @products.to_csv(col_sep: \"\\t\") }\n    end \n  end \n\n  def import\n      Factura.import(params[:file])\n       redirect_to root_url, notice: \"Factura importadas.\"\n  end \n\n\n    # Export invoice to PDF\n  def pdf\n    @invoice = Factura.find(params[:id])\n    respond_to do |format|\n      format.html { redirect_to(\"/facturas/pdf/#{@invoice.id}.pdf\") }\n      format.pdf { render :layout => false }\n    end\n  end\n  \n  # Process an invoice\n  def do_process\n    @invoice = Factura.find(params[:id])\n    @invoice[:processed] = \"1\"\n    @invoice.process\n    \n    flash[:notice] = \"The invoice order has been processed.\"\n    redirect_to @invoice\n  end\n  \n  # Do send invoice via email\n  def do_email\n    @invoice = Factura.find(params[:id])\n    @email = params[:email]\n    \n    Notifier.invoice(@email, @invoice).deliver\n    \n    flash[:notice] = \"The invoice has been sent successfully.\"\n    redirect_to \"/facturas/#{@invoice.id}\"\n  end\n  \n  # Send invoice via email\n  def email\n    @invoice = Factura.find(params[:id])\n    @company = @invoice.company\n  end\n\n  def do_anular\n    @invoice = Factura.find(params[:id])\n    @invoice[:processed] = \"2\"\n    \n    @invoice.anular \n    @invoice.delete_guias()\n  \n    flash[:notice] = \"Documento a sido anulado.\"\n    redirect_to @invoice \n  end\n  \n  \n  # List items\n  def list_items\n    \n    @company = Company.find(params[:company_id])\n    items = params[:items]\n    items = items.split(\",\")\n    items_arr = []\n    @products = []\n    i = 0\n\n    for item in items\n      if item != \"\"\n        parts = item.split(\"|BRK|\")\n        \n        id = parts[0]\n        quantity = parts[1]\n        price = parts[2]\n        discount = parts[3]\n        \n        product = Service.find(id.to_i)\n        product[:i] = i\n        product[:quantity] = quantity.to_f\n        product[:price] = price.to_f\n        product[:discount] = discount.to_f\n        \n        total = product[:price] * product[:quantity]\n        total -= total * (product[:discount] / 100)\n        \n        product[:currtotal] = total\n        \n        @products.push(product)\n      end\n      \n      i += 1\n   end\n    \n    render :layout => false\n  end\n  \n  def list_items2\n    \n    @company = Company.find(params[:company_id])\n    items = params[:items2]\n    items = items.split(\",\")\n    items_arr = []\n    @guias = []\n    i = 0\n\n    for item in items\n      if item != \"\"\n        parts = item.split(\"|BRK|\")\n\n        puts parts\n\n        id = parts[0]      \n        product = Delivery.find(id.to_i)\n        product[:i] = i\n\n        @guias.push(product)\n\n\n      end\n      \n      i += 1\n    end\n\n    render :layout => false\n  end \n\n  def ac_facturas  \n\n    @facturas = Factura.where([\"company_id = ? AND (code LIKE ?)\", params[:company_id], \"%\" + params[:q] + \"%\"])   \n    render :layout => false\n  end\n  \n  \n  # Autocomplete for products\n  def ac_guias\n    procesado = '1'\n    @guias = Delivery.where([\"company_id = ? AND (code LIKE ?)   \", params[:company_id], \"%\" + params[:q] + \"%\"])   \n    render :layout => false\n  end\n\n  \n  # Autocomplete for products\n  def ac_services\n    @products = Service.where([\"company_id = ? AND (code LIKE ? OR name LIKE ?)\", params[:company_id], \"%\" + params[:q] + \"%\", \"%\" + params[:q] + \"%\"])\n   \n    render :layout => false\n  end\n  \n  # Autocomplete for users\n  def ac_user\n    company_users = CompanyUser.where(company_id: params[:company_id])\n    user_ids = []\n    \n    for cu in company_users\n      user_ids.push(cu.user_id)\n    end\n    \n    @users = User.where([\"id IN (#{user_ids.join(\",\")}) AND (email LIKE ? OR username LIKE ?)\", \"%\" + params[:q] + \"%\", \"%\" + params[:q] + \"%\"])\n    alr_ids = []\n    \n    for user in @users\n      alr_ids.push(user.id)\n    end\n    \n    if(not alr_ids.include?(getUserId()))\n      @users.push(current_user)\n    end\n   \n    render :layout => false\n  end\n  \n  # Autocomplete for customers\n  def ac_customers\n    @customers = Customer.where([\"company_id = ? AND (ruc iLIKE ? OR name iLIKE ?)\", params[:company_id], \"%\" + params[:q] + \"%\", \"%\" + params[:q] + \"%\"])\n   \n    render :layout => false\n  end\n  \n  # Show invoices for a company\n  def list_invoices\n    @company = Company.find(params[:company_id])\n    @pagetitle = \"#{@company.name} - Invoices\"\n    @filters_display = \"block\"\n    \n    @locations = Location.where(company_id: @company.id).order(\"name ASC\")\n    @divisions = Division.where(company_id: @company.id).order(\"name ASC\")\n    \n    if(params[:location] and params[:location] != \"\")\n      @sel_location = params[:location]\n    end\n    \n    if(params[:division] and params[:division] != \"\")\n      @sel_division = params[:division]\n    end\n  \n    if(@company.can_view(current_user))\n      \n        if current_user.email == 'gestor.comercial.1@tpereda.com.pe' || current_user.email =='gestor.comercial.2@tpereda.com.pe' || current_user.email =='gestor.comercial.3@tpereda.com.pe'\n        @current_user_id = current_user.id \n             @invoices = Factura.all.where(user_id: @current_user_id).order('fecha DESC',\"code DESC\").paginate(:page => params[:page])\n            if params[:search]\n              @invoices = Factura.where(user_id: @current_user_id).search(params[:search]).order('fecha DESC',\"code DESC\").paginate(:page => params[:page])\n            else\n              @invoices = Factura.where(user_id: @current_user_id).order('fecha DESC',\"code DESC\").paginate(:page => params[:page]) \n            end\n        else \n        \n           @invoices = Factura.all.order('fecha DESC',\"code DESC\").paginate(:page => params[:page])\n            if params[:search]\n              @invoices = Factura.search(params[:search]).order('fecha DESC',\"code DESC\").paginate(:page => params[:page])\n            else\n              @invoices = Factura.order('fecha DESC',\"code DESC\").paginate(:page => params[:page]) \n            end\n  \n           \n        end\n    \n    else\n      errPerms()\n    end\n  end\n  \n  # GET /invoices\n  # GET /invoices.xml\n  def index\n    @companies = Company.where(user_id: current_user.id).order(\"name\")\n    @path = 'factura'\n    @pagetitle = \"Facturas\"\n    \n\n    @invoicesunat = Invoicesunat.order(:numero)    \n\n    @company= Company.find(1)\n\n  end\n\n  def export\n    @company = Company.find(params[:company_id])\n    @facturas  = Factura.all\n  end\n  def export3\n    @company = Company.find(params[:company_id])\n    @facturas  = Factura.all\n  end\n  def export4\n    @company = Company.find(params[:company_id])\n    @facturas  = Factura.all\n  end\n\n  def generar4\n    \n    @company = Company.find(params[:company_id])\n     Csubdiario.delete_all\n     Dsubdiario.delete_all\n\n\n     fecha1 =params[:fecha1]\n     fecha2 =params[:fecha2]\n\n     @facturas = @company.get_facturas_day(fecha1,fecha2)\n\n      $lcSubdiario='05'\n\n      subdiario = Numera.find_by(:subdiario=>'12')\n\n      lastcompro = subdiario.compro.to_i + 1\n      $lastcompro1 = lastcompro.to_s.rjust(4, '0')\n\n        item = fecha1.to_s \n        parts = item.split(\"-\")        \n        \n        mm    = parts[1]        \n\n      if subdiario\n          nrocompro = mm << $lastcompro1\n      end\n\n\n     for f in @facturas\n        \n        $lcFecha =f.fecha.strftime(\"%Y-%m-%d\")   \n        \n\n      newsubdia =Csubdiario.new(:csubdia=>$lcSubdiario,:ccompro=>$lastcompro1,:cfeccom=>$lcFecha, :ccodmon=>\"MN\",\n        :csitua=>\"F\",:ctipcam=>\"0.00\",:cglosa=>f.code,:csubtotal=>f.subtotal,:ctax=>f.tax,:ctotal=>f.total,\n        :ctipo=>\"V\",:cflag=>\"N\",:cdate=>$lcFecha ,:chora=>\"\",:cfeccam=>\"\",:cuser=>\"SIST\",\n        :corig=>\"\",:cform=>\"M\",:cextor=>\"\",:ccodane=>f.customer.ruc ) \n\n        newsubdia.save\n\n      lastcompro = lastcompro + 1\n      $lastcompro1 = lastcompro.to_s.rjust(4, '0')      \n\n      end \n\n      subdiario.compro = $lastcompro1\n      subdiario.save\n\n      @invoice = Csubdiario.all\n      send_data @invoice.to_csv  , :filename => 'CC0317.csv'\n\n    \n  end\n\n  def generar5\n\n      option =  params[:archivo]\n      puts option\n\n      if option == \"Ventas Cabecera\"\n\n        @invoice = Csubdiario.all\n        send_data @invoice.to_csv  , :filename => 'CC0317.csv'\n\n      else\n        @invoice = Dsubdiario.all\n        send_data @invoice.to_csv  , :filename => 'CD0317.csv'\n      end \n  end \n\n  def export2\n    Invoicesunat.delete_all\n    @company = Company.find(params[:company_id])\n    \n    @facturas  = Factura.where(:tipo => 1)\n     a = \"\"\n     \n     lcGuia=\"\"\n    for f in @facturas      \n        @fec =(f.code)\n        parts = @fec.split(\"-\")\n        lcSerie  = parts[0]\n        lcNumero = parts[1]\n        lcFecha  = f.fecha \n        \n        lcTD = f.document.descripshort\n        lcVventa = f.subtotal\n        lcIGV = f.tax\n        lcImporte = f.total \n        lcFormapago = f.payment.descrip\n        lcRuc = f.customer.ruc         \n        lcDes = f.description\n        lcMoneda = f.moneda_id \n        lcDescrip=\"\"\n        lcPsigv = 0 \n        lcPcigv = 0\n        lcCantidad = 0\n        lcGuia = \"\"\n        lcComments = \"\"\n        lcDes1 = \"\"\n        \n        for productItem in f.get_products2(f.id)\n\n        lcPsigv= productItem.price\n        lcPsigv1= lcPsigv*1.18\n        lcPcigv = lcPsigv1.round(2)\n        lcCantidad= productItem.quantity\n        lcDescrip = \"\"\n        lcDescrip << productItem.name + \"\\n\"\n        lcDescrip << lcDes\n        a = \"\"        \n        lcDes1 = \"\"\n\n        begin\n          a << \" \"\n              for guia in f.get_guias2(f.id)\n              a << \" GT: \" <<  guia.code << \" \"\n              if guia.description == nil\n                \n              else  \n                  a << \" \" << guia.description                   \n              end   \n              existe1 = f.get_guias_remision(guia.id)\n                if existe1.size > 0 \n                  a<<  \"\\n GR:\" \n                  for guias in  f.get_guias_remision(guia.id)    \n                     a<< guias.delivery.code<< \", \" \n                  end     \n                end      \n              end\n              existe2 = f.get_guiasremision2(f.id)\n              if existe2.size > 0\n              a << \"\\n GR : \"\n                for guia in f.get_guiasremision2(f.id)\n                  a << guia.code << \"  \"            \n                end\n              end \n            lcDes1 << a\n            lcComments = \"\"\n        end\n        \n        new_invoice_item= Invoicesunat.new(:cliente => lcRuc, :fecha => lcFecha,:td =>lcTD,\n        :serie => lcSerie,:numero => lcNumero,:preciocigv => lcPcigv ,:preciosigv =>lcPsigv,:cantidad =>lcCantidad,\n        :vventa => lcVventa,:igv => lcIGV,:importe => lcImporte,:ruc =>lcRuc,:guia => lcGuia,:formapago =>lcFormapago,\n        :description => lcDescrip,:comments => lcComments,:descrip =>lcDes1,:moneda =>lcMoneda )\n        new_invoice_item.save\n        \n      end  \n    end \n    lcFecha='2017-05-30 00:00:00'\n    lcTD=\"FT\"\n    lcSerie = \"001\"\n    lcNumero= '470'\n    lcRuc='20100082391'\n    \n\n     new_invoice_item= Invoicesunat.new(:cliente =>lcRuc, :fecha => lcFecha ,:td =>lcTD,\n        :serie => lcSerie,:numero => lcNumero,:preciocigv => 0.00 ,:preciosigv =>0.00,:cantidad =>0.00,\n        :vventa => 0.00 ,:igv => 0.00,:importe => 0.00 ,:ruc =>lcRuc,:guia => \"\",:formapago => \"\",\n        :description => \"\",:comments =>\"\",:descrip =>\"\",:moneda =>\"2\" )\n        new_invoice_item.save\n        \n    lcFecha='2017-05-30 00:00:00'\n    lcTD=\"FT\"\n    lcSerie = \"001\"\n    lcNumero= '472'\n    lcRuc='20600373863'\n    \n     new_invoice_item= Invoicesunat.new(:cliente =>lcRuc, :fecha => lcFecha,:td =>lcTD,\n        :serie => lcSerie,:numero => lcNumero,:preciocigv => 0.00 ,:preciosigv =>0.00,:cantidad =>0.00,\n        :vventa => 0.00 ,:igv => 0.00,:importe => 0.00 ,:ruc =>lcRuc,:guia => \"\",:formapago => \"\",\n        :description => \"\",:comments =>\"\",:descrip =>\"\",:moneda =>\"2\" )\n        new_invoice_item.save\n\n    lcFecha='2017-05-30 00:00:00'\n    lcTD=\"FT\"\n    lcSerie = \"001\"\n    lcNumero= '530'\n    lcRuc='20506675457'\n    \n     new_invoice_item= Invoicesunat.new(:cliente =>lcRuc, :fecha => lcFecha,:td =>lcTD,\n        :serie => lcSerie,:numero => lcNumero,:preciocigv => 0.00 ,:preciosigv =>0.00,:cantidad =>0.00,\n        :vventa => 0.00 ,:igv => 0.00,:importe => 0.00 ,:ruc =>lcRuc,:guia => \"\",:formapago => \"\",\n        :description => \"\",:comments =>\"\",:descrip =>\"\",:moneda =>\"2\" )\n        new_invoice_item.save\n        \n    lcFecha='2017-05-30 00:00:00'\n    lcTD=\"FT\"\n    lcSerie = \"001\"\n    lcNumero= '531'\n    lcRuc='20506675457'\n    \n     new_invoice_item= Invoicesunat.new(:cliente =>lcRuc, :fecha => lcFecha,:td =>lcTD,\n        :serie => lcSerie,:numero => lcNumero,:preciocigv => 0.00 ,:preciosigv =>0.00,:cantidad =>0.00,\n        :vventa => 0.00 ,:igv => 0.00,:importe => 0.00 ,:ruc =>lcRuc,:guia => \"\",:formapago => \"\",\n        :description => \"\",:comments =>\"\",:descrip =>\"\",:moneda =>\"2\" )\n        new_invoice_item.save\n         \n    \n    @invoice = Invoicesunat.all\n    send_data @invoice.to_csv  \n    \n  end\n  \n  def generar\n        \n    @company = Company.find(params[:company_id])\n    @users = @company.get_users()\n    @users_cats = []\n    \n    @pagetitle = \"Generar archivo txt\"\n    \n    @f =(params[:fecha1])\n\n        parts = @f.split(\"-\")\n        yy = parts[0]\n        mm = parts[1]\n        dd = parts[2]\n\n     @fechadoc=dd+\"/\"+mm+\"/\"+yy   \n     @tipodocumento='01'\n    \n    files_to_clean =  Dir.glob(\"./app/txt_output/*.txt\")\n        files_to_clean.each do |file|\n          File.delete(file)\n        end \n\n    @facturas_all_txt = @company.get_facturas_year_month_day(@f)\n\n    if @facturas_all_txt\n      out_file = File.new(\"#{Dir.pwd}/app/txt_output/20424092941-RF-#{dd}#{mm}#{yy}-01.txt\", \"w\")      \n        for factura in @facturas_all_txt \n            parts = factura.code.split(\"-\")\n            @serie     =parts[0]\n            @nrodocumento=parts[1]\n\n            out_file.puts(\"7|#{@fechadoc}|#{@tipodocumento}|#{@serie}|#{@nrodocumento}||6|#{factura.customer.ruc}|#{factura.customer.name}|#{factura.subtotal}|0.00|0.00|0.00|#{factura.tax}|0.00|#{factura.total}||||\\n\")\n                    \n        end \n    out_file.close\n    end \n    \n    \n  end\n\n  def generar3\n        \n    @company = Company.find(params[:company_id])\n    @users = @company.get_users()\n    @users_cats = []\n    \n    @pagetitle = \"Generar archivo\"\n    \n    @f =(params[:fecha1])\n    @f2 =(params[:fecha1])\n\n        parts = @f.split(\"-\")\n        yy = parts[0]\n        mm = parts[1]\n        dd = parts[2]\n\n     @fechadoc=dd+\"/\"+mm+\"/\"+yy   \n     @tipodocumento='01'\n    \n    files_to_clean =  Dir.glob(\"./app/txt_output/*.txt\")\n        files_to_clean.each do |file|\n          File.delete(file)\n        end \n\n    @facturas_all_txt = @company.get_facturas_year_month_day2(@f,@f2)\n\n    if @facturas_all_txt\n        out_file = File.new(\"#{Dir.pwd}/app/txt_output/20424092941-RF-#{dd}#{mm}#{yy}-01.txt\", \"w\")      \n        for factura in @facturas_all_txt \n            parts = factura.code.split(\"-\")\n            @serie     =parts[0]\n            @nrodocumento=parts[1]\n\n            out_file.puts(\"7|#{@fechadoc}|#{@tipodocumento}|#{@serie}|#{@nrodocumento}||6|#{factura.customer.ruc}|#{factura.customer.name}|#{factura.subtotal}|0.00|0.00|0.00|#{factura.tax}|0.00|#{factura.total}||||\\n\")\n                    \n        end \n    out_file.close\n    end \n    \n    \n  end\n    \n\n  # GET /invoices/1\n  # GET /invoices/1.xml\n  def show\n    @invoice = Factura.find(params[:id])\n    @customer = @invoice.customer\n    @tipodocumento = @invoice.document \n    \n   \n    \n    $lcruc = \"20555691263\" \n    \n    $lcTipoDocumento = @invoice.document.descripshort\n    parts1 = @invoice.code.split(\"-\")\n    $lcSerie  = parts1[0]\n    $lcNumero = parts1[1]\n    \n    $lcIgv = @invoice.tax.to_s\n    $lcTotal = @invoice.total.to_s \n    $lcFecha       = @invoice.fecha\n    $lcFecha1      = $lcFecha.to_s\n\n          parts = $lcFecha1.split(\"-\")\n          $aa = parts[0]\n          $mm = parts[1]        \n          $dd = parts[2]       \n\n    \n    $lcFecha0 = $aa << \"-\" << $mm <<\"-\"<< $dd \n    \n    if @invoice.document_id == 1 \n      $lcTipoDocCli =  \"1\"\n    else\n      $lcTipoDocCli =  \"6\"\n    end \n      $lcNroDocCli  = @invoice.customer.ruc \n\n      \n      \n      $lcCodigoBarra = $lcruc << \"|\" << $lcTipoDocumento << \"|\" << $lcSerie << \"|\" << $lcNumero << \"|\" <<$lcIgv<< \"|\" << $lcTotal << \"|\" << $lcFecha0 << \"|\" << $lcTipoDocCli << \"|\" << $lcNroDocCli\n      \n\n  end\n\n  # GET /invoices/new\n  # GET /invoices/new.xml\n  \n  def new\n    @pagetitle = \"Nueva factura\"\n    @action_txt = \"Create\"\n    $lcAction=\"Boleta\"\n    $Action= \"create\"\n    \n    @invoice = Factura.new\n    \n    @invoice[:code] = \"#{generate_guid3()}\"\n    \n    @invoice[:processed] = false\n    \n    \n    \n    \n    @company = Company.find(params[:company_id])\n    @invoice.company_id = @company.id\n    \n    @locations = @company.get_locations()\n    @divisions = @company.get_divisions()\n    @payments = @company.get_payments()\n    @services = @company.get_services()\n    @products = @company.get_products()\n    \n    @deliveryships = @invoice.my_deliverys \n    @tipofacturas = @company.get_tipofacturas() \n    @monedas = @company.get_monedas()\n    @tipodocumento = @company.get_documents()\n\n    @ac_user = getUsername()\n    @invoice[:user_id] = getUserId()\n    @invoice[:moneda_id] = 2\n    @invoice[:document_id] = 3\n    \n  end\n  def new2\n    @pagetitle = \"Nueva factura\"\n    @action_txt = \"Create\"\n    $lcAction=\"Factura\"\n    \n    @invoice = Factura.new\n    @invoice[:code] = \"#{generate_guid3()}\"\n    @invoice[:processed] = false\n    \n    \n    @company = Company.find(params[:company_id])\n    @invoice.company_id = @company.id\n    \n    @locations = @company.get_locations()\n    @divisions = @company.get_divisions()\n    @payments = @company.get_payments()\n    @services = @company.get_services()\n    @deliveryships = @invoice.my_deliverys \n    @tipofacturas = @company.get_tipofacturas() \n    @monedas = @company.get_monedas()\n    @tipodocumento = @company.get_documents()\n    @tipoventas = Tipoventum.all \n    @ac_user = getUsername()\n    @invoice[:user_id] = getUserId()\n  end\n  \ndef newfactura2\n    \n    @company = Company.find(1)\n    @factura = Factura.find(params[:factura_id])\n    @customer = Customer.find(@factura.customer_id) \n    \n    \n    $lcContratoId = @customer.id\n    $lcCode  = @customer.account\n    $lcNameCode = @customer.name \n  \n    $lcFacturaId= @factura.id \n    \n  \n    @detalleitems =  Sellvale.where(processed:\"0\",cod_cli: @customer.account)\n    @factura_detail = Factura.new\n\n  \n  end \n\n\n  # GET /invoices/1/edit\n  def edit\n    @pagetitle = \"Edit invoice\"\n    @action_txt = \"Update\"\n    \n    @invoice = Factura.find(params[:id])\n    @company = @invoice.company\n    @ac_customer = @invoice.customer.name\n    @ac_user = @invoice.user.username\n    @payments = @company.get_payments()    \n    @services = @company.get_services()\n    @deliveryships = @invoice.my_deliverys \n    @tipofacturas = @company.get_tipofacturas() \n    @products_lines = @invoice.products_lines\n    @tipoventas = Tipoventum.all \n    @tipodocumento = @company.get_documents()\n    @monedas = @company.get_monedas()\n    @products = @company.get_products()\n    \n    @locations = @company.get_locations()\n    @divisions = @company.get_divisions()\n  end\n\n  # POST /invoices\n  # POST /invoices.xml\n  def create\n    @pagetitle = \"Nueva factura \"\n    @action_txt = \"Create\"\n    \n    items = params[:items].split(\",\")\n\n    items2 = params[:items2].split(\",\")\n\n    @invoice = Factura.new(factura_params)\n    \n    @company = Company.find(params[:factura][:company_id])\n    \n    @locations = @company.get_locations()\n    @divisions = @company.get_divisions()\n    @payments = @company.get_payments()    \n    @services = @company.get_services()\n\n    if @invoice[:document_id] == 2\n      @invoice[:subtotal] = @invoice.get_subtotal(items) * -1\n  \n        begin\n          @invoice[:tax] = @invoice.get_tax(items, @invoice[:customer_id]) * -1\n        rescue\n          @invoice[:tax] = 0\n        end\n        \n        @invoice[:total] = @invoice[:subtotal] + @invoice[:tax]\n        \n        @invoice[:balance] = @invoice[:total]\n      \n    else\n      \n        @invoice[:subtotal] = @invoice.get_subtotal(items)\n        \n        begin\n          @invoice[:tax] = @invoice.get_tax(items, @invoice[:customer_id])\n        rescue\n          @invoice[:tax] = 0\n        end\n        \n        @invoice[:total] = @invoice[:subtotal] + @invoice[:tax]\n        @invoice[:balance] = @invoice[:total]\n        \n        \n     end\n      \n\n  \n    \n    @invoice[:pago] = 0\n    @invoice[:charge] = 0\n    \n    \n     parts = (@invoice[:code]).split(\"-\")\n     id = parts[0]\n     numero2 = parts[1]\n     \n    if(params[:factura][:user_id] and params[:factura][:user_id] != \"\")\n      curr_seller = User.find(params[:factura][:user_id])\n      @ac_user = curr_seller.username\n    end\n    @invoice[:numero2] = numero2\n  \n    respond_to do |format|\n      if @invoice.save\n        # Create products for kit\n        @invoice.add_products(items)\n        @invoice.add_guias(items2)\n        \n        @invoice.correlativo\n               # Check if we gotta process the invoice\n        @invoice.process()\n\n        \n        format.html { redirect_to(@invoice, :notice => 'Invoice was successfully created.') }\n        format.xml  { render :xml => @invoice, :status => :created, :location => @invoice }\n      else\n        format.html { render :action => \"new\" }\n        format.xml  { render :xml => @invoice.errors, :status => :unprocessable_entity }\n      end\n    end\n  end\n  \n\n  # PUT /invoices/1\n  # PUT /invoices/1.xml\n  def update\n    @pagetitle = \"Edit invoice\"\n    @action_txt = \"Update\"\n    \n    items = params[:items].split(\",\")\n    \n    @invoice = Factura.find(params[:id])\n    @company = @invoice.company\n    @payments = @company.get_payments()    \n    if(params[:ac_customer] and params[:ac_customer] != \"\")\n      @ac_customer = params[:ac_customer]\n    else\n      @ac_customer = @invoice.customer.name\n    end\n    \n    @products_lines = @invoice.products_lines\n    \n    @locations = @company.get_locations()\n    @divisions = @company.get_divisions()\n    @tipoventas = Tipoventum.all \n    \n    @invoice[:subtotal] = @invoice.get_subtotal(items)\n    @invoice[:tax] = @invoice.get_tax(items, @invoice[:customer_id])\n    @invoice[:total] = @invoice[:subtotal] + @invoice[:tax]\n\n    respond_to do |format|\n      if @invoice.update_attributes(factura_params)\n        # Create products for kit\n        @invoice.delete_products()\n        @invoice.add_products(items)\n        @invoice.correlativo\n        # Check if we gotta process the invoice\n        @invoice.process()\n        \n        format.html { redirect_to(@invoice, :notice => 'Invoice was successfully updated.') }\n        format.xml  { head :ok }\n      else\n        format.html { render :action => \"edit\" }\n        format.xml  { render :xml => @invoice.errors, :status => :unprocessable_entity }\n      end\n    end\n  end\n\n  # DELETE /invoices/1\n  # DELETE /invoices/1.xml\n  def destroy\n    @invoice = Factura.find(params[:id])\n    company_id = @invoice[:company_id]\n    if @invoice.destroy\n      @invoice.delete_guias()\n    end   \n\n\n    respond_to do |format|\n      format.html { redirect_to(\"/companies/facturas/\" + company_id.to_s) }\n    end\n\n  end\n  \n  def rpt_ccobrar2\n  \n    $lcxCliente =\"1\"\n    @company=Company.find(1)      \n    \n    lcmonedadolares =\"1\"\n    lcmonedasoles =\"2\"\n    \n    @fecha1 = params[:fecha1]  \n    @fecha2 = params[:fecha2]\n\n    @company.actualizar_fecha2\n    @company.actualizar_detraccion \n\n    @facturas_rpt = @company.get_pendientes_day(@fecha1,@fecha2)  \n\n    case params[:print]\n      when \"To PDF\" then \n           redirect_to :action => \"rpt_ccobrar2_pdf\", :format => \"pdf\", :fecha1 => params[:fecha1], :fecha2 => params[:fecha2] ,locals: {:customers => @facturas_rpt}\n          \n      when \"To Excel\" then render xlsx: 'rpt_ccobrar2_xls'\n        \n      else render action: \"index\"\n    end\n  end\n  def rpt_ccobrar3\n  \n    $lcxCliente =\"1\"\n    @company=Company.find(1)      \n    \n    @fecha1 = params[:fecha1]    \n    @fecha2 = params[:fecha2]\n    @cliente = params[:customer_id]      \n    lcmonedadolares =\"1\"\n    lcmonedasoles =\"2\"\n    @facturas_rpt = @company.get_pendientes_cliente(@fecha1,@fecha2,@cliente)    \n    \n    @total_cliente_dolares   = @company.get_pendientes_day_customer(@fecha1,@fecha2, @cliente, lcmonedadolares)\n    @total_cliente_soles = @company.get_pendientes_day_customer(@fecha1,@fecha2, @cliente,lcmonedasoles)\n    @total_cliente_detraccion = @company.get_pendientes_day_customer_detraccion(@fecha1,@fecha2, @cliente)\n    \n    \n    case params[:print]\n      when \"To PDF\" then \n          redirect_to :action => \"rpt_ccobrar3_pdf\", :format => \"pdf\", :fecha1 => params[:fecha1], :fecha2 => params[:fecha2], :customer_id => params[:customer_id] \n          \n      when \"To Excel\" then render xlsx: 'rpt_ccobrar3_xls'\n        \n      else render action: \"index\"\n    end\n  end\n  \n# reporte completo\n  def build_pdf_header_rpt(pdf)\n      pdf.font \"Helvetica\" , :size => 8\n     $lcCli  =  @company.name \n     $lcdir1 = @company.address1+@company.address2+@company.city+@company.state\n\n     $lcFecha1= Date.today.strftime(\"%d/%m/%Y\").to_s\n     $lcHora  = Time.now.to_s\n\n    max_rows = [client_data_headers_rpt.length, invoice_headers_rpt.length, 0].max\n      rows = []\n      (1..max_rows).each do |row|\n        rows_index = row - 1\n        rows[rows_index] = []\n        rows[rows_index] += (client_data_headers_rpt.length >= row ? client_data_headers_rpt[rows_index] : ['',''])\n        rows[rows_index] += (invoice_headers_rpt.length >= row ? invoice_headers_rpt[rows_index] : ['',''])\n      end\n\n      if rows.present?\n\n        pdf.table(rows, {\n          :position => :center,\n          :cell_style => {:border_width => 0},\n          :width => pdf.bounds.width\n        }) do\n          columns([0, 2]).font_style = :bold\n\n        end\n\n        pdf.move_down 10\n\n      end\n    \n      pdf \n  end   \n\n  def build_pdf_body_rpt(pdf)\n    \n    pdf.text \"Facturas Moneda\" +\" Emitidas : desde \"+@fecha1.to_s+ \" Hasta: \"+@fecha2.to_s , :size => 8 \n\n\n    pdf.text \"\"\n    pdf.font \"Helvetica\" , :size => 6\n\n      headers = []\n      table_content = []\n\n      Factura::TABLE_HEADERS2.each do |header|\n        cell = pdf.make_cell(:content => header)\n        cell.background_color = \"FFFFCC\"\n        headers << cell\n      end\n\n      table_content << headers\n\n      nroitem=1\n      lcDoc='FT'\n      lcsubtotal =  0\n      lctax = 0\n      lctotal = 0\n\n       for  product in @facturas_rpt\n\n            row = []          \n            row << product.document.descripshort\n            row << product.code\n            row << product.fecha.strftime(\"%d/%m/%Y\")            \n            \n            row << product.customer.ruc  \n            \n            \n            row << product.customer.name  \n            \n            if product.moneda_id == 1\n              row << \"USD\"\n            else\n              row << \"S/.\"\n            end \n            if product.document_id == 2\n              lcsubtotal = product.subtotal * -1\n              lctax = product.tax * -1\n              lctotal = product.total* -1\n              row << lcsubtotal\n              row << lctax\n              row << lctotal \n            else\n             \n              \n              row << product.subtotal.to_s\n              row << product.tax.to_s\n              row << product.total.to_s\n            end \n            row << \"\"\n            table_content << row\n\n            nroitem=nroitem + 1\n       \n        end\n\n\n\n      subtotals = []\n      taxes = []\n      totals = []\n      services_subtotal = 0\n      services_tax = 0\n      services_total = 0\n\n    if $lcFacturasall == '1'    \n      subtotal = @company.get_facturas_day_value(@fecha1,@fecha2, \"subtotal\",@moneda)\n      subtotals.push(subtotal)\n      services_subtotal += subtotal          \n      #pdf.text subtotal.to_s\n    \n    \n      tax = @company.get_facturas_day_value(@fecha1,@fecha2, \"tax\",@moneda)\n      taxes.push(tax)\n      services_tax += tax\n    \n      #pdf.text tax.to_s\n      \n      total = @company.get_facturas_day_value(@fecha1,@fecha2, \"total\",@moneda)\n      totals.push(total)\n      services_total += total\n      #pdf.text total.to_s\n\n    else\n        #total x cliente \n      subtotal = @company.get_facturas_day_value_cliente(@fecha1,@fecha2,@cliente, \"subtotal\",@moneda)\n      subtotals.push(subtotal)\n      services_subtotal += subtotal          \n      #pdf.text subtotal.to_s\n    \n    \n      tax = @company.get_facturas_day_value_cliente(@fecha1,@fecha2,@cliente, \"tax\",@moneda,)\n      taxes.push(tax)\n      services_tax += tax\n    \n      #pdf.text tax.to_s\n      \n      total = @company.get_facturas_day_value_cliente(@fecha1,@fecha2,@cliente,\"total\",@moneda,)\n      totals.push(total)\n      services_total += total\n    \n    end\n\n      row =[]\n      row << \"\"\n      row << \"\"\n      row << \"\"\n      \n      row << \"TOTALES => \"\n      row << \"\"\n      row << subtotal.round(2).to_s\n      row << tax.round(2).to_s\n      row << total.round(2).to_s\n      row << \"\"\n      table_content << row\n      \n      result = pdf.table table_content, {:position => :center,\n                                        :header => true,\n                                        :width => pdf.bounds.width\n                                        } do \n                                          columns([0]).align=:center\n                                          columns([1]).align=:left\n                                          columns([2]).align=:left\n                                          columns([3]).align=:left\n                                          columns([4]).align=:left\n                                          columns([5]).align=:right  \n                                          columns([6]).align=:right\n                                          columns([7]).align=:right\n                                          columns([8]).align=:right\n                                        end                                          \n      pdf.move_down 10      \n\n      #totales \n\n      pdf \n\n    end\n\n    def build_pdf_footer_rpt(pdf)\n      \n                  \n      pdf.text \"\" \n      pdf.bounding_box([0, 20], :width => 535, :height => 40) do\n      pdf.draw_text \"Company: #{@company.name} - Created with: #{getAppName()} - #{getAppUrl()}\", :at => [pdf.bounds.left, pdf.bounds.bottom - 20]\n\n      end\n\n      pdf\n      \n  end\n\n##### reporte de pendientes de pago..\n\n  def build_pdf_header_rpt2(pdf)\n      pdf.font \"Helvetica\" , :size => 8\n     $lcCli  =  @company.name \n     $lcdir1 = @company.address1+@company.address2+@company.city+@company.state\n\n     $lcFecha1= Date.today.strftime(\"%d/%m/%Y\").to_s\n     $lcHora  = Time.now.to_s\n\n    max_rows = [client_data_headers_rpt.length, invoice_headers_rpt.length, 0].max\n      rows = []\n      (1..max_rows).each do |row|\n        rows_index = row - 1\n        rows[rows_index] = []\n        rows[rows_index] += (client_data_headers_rpt.length >= row ? client_data_headers_rpt[rows_index] : ['',''])\n        rows[rows_index] += (invoice_headers_rpt.length >= row ? invoice_headers_rpt[rows_index] : ['',''])\n      end\n\n      if rows.present?\n\n        pdf.table(rows, {\n          :position => :center,\n          :cell_style => {:border_width => 0},\n          :width => pdf.bounds.width\n        }) do\n          columns([0, 2]).font_style = :bold\n\n        end\n\n        pdf.move_down 10\n\n      end\n\n\n      \n      pdf \n  end   \n\n  def build_pdf_body_rpt2(pdf)\n    \n    pdf.text \"Cuentas por cobrar  : desde \"+@fecha1.to_s+ \" Hasta: \"+@fecha2.to_s , :size => 8 \n    pdf.text \"\"\n    pdf.font \"Helvetica\" , :size => 7\n\n      headers = []\n      table_content = []\n\n      Factura::TABLE_HEADERS3.each do |header|\n        cell = pdf.make_cell(:content => header)\n        cell.background_color = \"FFFFCC\"\n        headers << cell\n      end\n\n      table_content << headers\n\n      nroitem = 1\n      lcmonedasoles   = 2\n      lcmonedadolares = 1\n  \n      lcDoc='FT'    \n      lcCliente = @facturas_rpt.first.customer_id \n      @totalvencido_soles = 0\n      @totalvencido_dolar = 0\n      \n       for  product in @facturas_rpt\n       \n        if product.document_id == 2\n            balance_importe = product.balance.round(2) * -1\n        else\n            balance_importe = product.balance.round(2) \n        end \n         \n       \n         if balance_importe > 0.00\n           \n          if lcCliente == product.customer_id\n\n            fechas2 = product.fecha2 \n\n            row = []          \n            if product.document \n              row << product.document.descripshort \n            else\n              row <<  lcDoc \n            end \n            row << product.code\n            row << product.fecha.strftime(\"%d/%m/%Y\")\n            row << product.fecha2.strftime(\"%d/%m/%Y\")\n            dias = (product.fecha2.to_date - product.fecha.to_date).to_i \n            \n            row << dias \n            row << product.customer.name\n            row << product.moneda.symbol  \n\n            if product.moneda_id == 1 \n                  row << \"0.00 \"\n                  row << sprintf(\"%.2f\",product.balance.to_s)\n                  if(product.fecha2 < Date.today)   \n                      @totalvencido_dolar += product.balance\n                  end  \n                \n            else\n                  row << sprintf(\"%.2f\",product.balance.to_s)\n                  row << \"0.00 \"\n                  if(product.fecha2 < Date.today)   \n                      @totalvencido_soles += product.balance\n                  end  \n                    \n                \n            end\n            \n            \n            if product.detraccion == nil\n              row <<  \"0.00\"\n            else  \n              row << sprintf(\"%.2f\",product.detraccion.to_s)\n            end\n            row << product.get_vencido \n            \n             \n            \n            table_content << row\n\n            nroitem = nroitem + 1\n\n          else\n            totals = []            \n            total_cliente_soles   = 0\n            total_cliente_soles   = @company.get_pendientes_day_customer(@fecha1,@fecha2, lcCliente, lcmonedadolares)\n            total_cliente_dolares = 0\n            total_cliente_dolares = @company.get_pendientes_day_customer(@fecha1,@fecha2, lcCliente, lcmonedasoles)\n            \n            row =[]\n            row << \"\"\n            row << \"\"\n            row << \"\"\n            row << \"\"  \n            row << \"\"  \n            row << \"TOTALES POR CLIENTE=> \"            \n            row << \"\"\n            row << sprintf(\"%.2f\",total_cliente_dolares.to_s)\n            row << sprintf(\"%.2f\",total_cliente_soles.to_s)\n            row << \" \"\n            row << \" \"\n            \n            table_content << row\n\n            lcCliente = product.customer_id\n\n\n            row = []          \n            row << product.document.descripshort \n            row << product.code\n            row << product.fecha.strftime(\"%d/%m/%Y\")\n            row << product.fecha2.strftime(\"%d/%m/%Y\")\n              dias = (product.fecha2.to_date - product.fecha.to_date).to_i \n            \n            row << dias \n            row << product.customer.name\n            row << product.moneda.symbol  \n\n            if product.moneda_id == 1 \n                row << \"0.00 \"\n                row << sprintf(\"%.2f\",product.balance.to_s)\n            else\n                row << sprintf(\"%.2f\",product.balance.to_s)\n                row << \"0.00 \"\n            end \n            row << sprintf(\"%.2f\",product.detraccion.to_s)\n            row << product.observ\n\n            \n            table_content << row\n\n          end \n          \n        end \n          \n          \n       \n        end\n\n            lcCliente = @facturas_rpt.last.customer_id \n            totals = []            \n            total_cliente = 0\n\n            total_cliente_soles   = 0\n            total_cliente_soles   = @company.get_pendientes_day_customer(@fecha1,@fecha2, lcCliente, lcmonedadolares)\n            total_cliente_dolares = 0\n            total_cliente_dolares = @company.get_pendientes_day_customer(@fecha1,@fecha2, lcCliente, lcmonedasoles)\n            \n            row =[]\n            row << \"\"\n            row << \"\"\n            row << \"\"\n            row << \"\"  \n            row << \"\"          \n            row << \"TOTALES POR CLIENTE=> \"            \n            row << \"\"\n            row << sprintf(\"%.2f\",total_cliente_dolares.to_s)\n            row << sprintf(\"%.2f\",total_cliente_soles.to_s)                      \n            row << \" \"\n            row << \" \"\n            table_content << row\n              \n          total_soles   = @company.get_pendientes_day_value(@fecha1,@fecha2, \"total\",lcmonedasoles)\n          total_dolares = @company.get_pendientes_day_value(@fecha1,@fecha2, \"total\",lcmonedadolares)\n      \n           if $lcxCliente == \"0\" \n\n          row =[]\n          row << \"\"\n          row << \"\"\n          row << \"\"\n          row << \"\"\n          row << \"\"  \n          row << \"TOTALES => \"\n          row << \"\"\n          row << sprintf(\"%.2f\",total_soles.to_s)\n          row << sprintf(\"%.2f\",total_dolares.to_s)                    \n          row << \" \"\n          row << \" \"\n          table_content << row\n          end \n          \n\n          result = pdf.table table_content, {:position => :center,\n                                        :header => true,\n                                        :width => pdf.bounds.width\n                                        } do \n                                          columns([0]).align=:center\n                                          columns([1]).align=:left\n                                          columns([2]).align=:left\n                                          columns([3]).align=:left\n                                          columns([4]).align=:left\n                                          columns([5]).align=:left   \n                                          columns([5]).width = 100 \n                                          columns([6]).align=:right\n                                          columns([7]).align=:right\n                                          columns([8]).align=:right\n                                          columns([9]).align=:right\n                                          columns([10]).align=:right\n                                        end                                          \n                                        \n      pdf.move_down 10    \n      \n      \n      \n      if $lcxCliente == \"1\" \n      \n      totalxvencer_soles  = total_cliente_dolares   - @totalvencido_soles\n      totalxvencer_dolar  = total_cliente_soles - @totalvencido_dolar\n      \n      pdf.table([  [\"Resumen    \",\" Soles  \", \"Dólares \"],\n              [\"Total Vencido    \",sprintf(\"%.2f\",@totalvencido_soles.to_s), sprintf(\"%.2f\",@totalvencido_dolar.to_s)],\n              [\"Total por Vencer \",sprintf(\"%.2f\",totalxvencer_soles.to_s),sprintf(\"%.2f\",totalxvencer_dolar.to_s)],\n              [\"Totales          \",sprintf(\"%.2f\",total_cliente_dolares.to_s),sprintf(\"%.2f\",total_cliente_soles.to_s)]])\n              \n      end \n      #totales \n      \n      pdf \n\n    end\n\n    def build_pdf_footer_rpt2(pdf)      \n                  \n      pdf.text \"\" \n      pdf.bounding_box([0, 20], :width => 535, :height => 40) do\n      pdf.draw_text \"Company: #{@company.name} - Created with: #{getAppName()} - #{getAppUrl()}\", :at => [pdf.bounds.left, pdf.bounds.bottom - 20]\n\n    end\n\n    pdf\n      \n  end\n\n\n  # Export serviceorder to PDF\n  def rpt_facturas_all_pdf\n\n    $lcFacturasall = '1'\n\n    @company=Company.find(params[:company_id])          \n    @fecha1 = params[:fecha1]    \n    @fecha2 = params[:fecha2]    \n    @moneda = params[:moneda_id]    \n\n    @facturas_rpt = @company.get_facturas_day(@fecha1,@fecha2,@moneda)      \n\n#    respond_to do |format|\n#      format.html    \n#      format.xls # { send_data @products.to_csv(col_sep: \"\\t\") }\n#    end \n\n    Prawn::Document.generate(\"app/pdf_output/rpt_factura.pdf\") do |pdf|\n        pdf.font \"Helvetica\"\n        pdf = build_pdf_header_rpt(pdf)\n        pdf = build_pdf_body_rpt(pdf)\n        build_pdf_footer_rpt(pdf)\n        $lcFileName =  \"app/pdf_output/rpt_factura_all.pdf\"              \n    end     \n    $lcFileName1=File.expand_path('../../../', __FILE__)+ \"/\"+$lcFileName              \n    send_file(\"app/pdf_output/rpt_factura.pdf\", :type => 'application/pdf', :disposition => 'inline')\n\n  end\n# Export serviceorder to PDF\n  def rpt_facturas_all2_pdf\n\n    $lcFacturasall = '0'\n    @company=Company.find(params[:company_id])          \n    @fecha1 = params[:fecha1]    \n    @fecha2 = params[:fecha2]    \n    @cliente = params[:customer_id]     \n    @moneda = params[:moneda_id]    \n\n    @facturas_rpt = @company.get_facturas_day_cliente(@fecha1,@fecha2,@cliente)  \n\n\n    Prawn::Document.generate(\"app/pdf_output/rpt_factura.pdf\") do |pdf|\n        pdf.font \"Helvetica\"\n        pdf = build_pdf_header_rpt(pdf)\n        pdf = build_pdf_body_rpt(pdf)\n        build_pdf_footer_rpt(pdf)\n        $lcFileName =  \"app/pdf_output/rpt_factura.pdf\"              \n    end     \n    $lcFileName1=File.expand_path('../../../', __FILE__)+ \"/\"+$lcFileName              \n    send_file(\"app/pdf_output/rpt_factura.pdf\", :type => 'application/pdf', :disposition => 'inline')\n  end\n\n  ###pendientes de pago \n  def rpt_ccobrar2_pdf\n    $lcxCliente =\"0\"\n    @company=Company.find(1)      \n    @fecha1 = params[:fecha1]    \n    @fecha2 = params[:fecha2]\n\n    lcmonedadolares =\"1\"\n    lcmonedasoles =\"2\"\n    \n    @company.actualizar_fecha2\n    @company.actualizar_detraccion \n\n    @facturas_rpt = @company.get_pendientes_day(@fecha1,@fecha2)  \n\n      \n    Prawn::Document.generate(\"app/pdf_output/rpt_pendientes.pdf\") do |pdf|\n        pdf.font \"Helvetica\"\n        pdf = build_pdf_header_rpt2(pdf)\n        pdf = build_pdf_body_rpt2(pdf)\n        build_pdf_footer_rpt2(pdf)\n\n        $lcFileName =  \"app/pdf_output/rpt_pendientes.pdf\"              \n    end     \n\n    $lcFileName1=File.expand_path('../../../', __FILE__)+ \"/\"+$lcFileName              \n    send_file(\"app/pdf_output/rpt_pendientes.pdf\", :type => 'application/pdf', :disposition => 'inline')\n  \n\n  end\n  \n  ###pendientes de pago \n  def rpt_ccobrar3_pdf\n\n    $lcxCliente =\"1\"\n    @company=Company.find(1)      \n    @company.actualizar_fecha2\n    @company.actualizar_detraccion \n    \n    @fecha1 = params[:fecha1]    \n    @fecha2 = params[:fecha2]\n    @cliente = params[:customer_id]      \n   \n    @facturas_rpt = @company.get_pendientes_cliente(@fecha1,@fecha2,@cliente)  \n    \n    for f in @facturas_rpt\n      puts f.document.descripshort\n      puts f.code \n      puts f.balance \n      \n    end \n    \n    @dolares = 0\n    @soles = 0 \n\n    if @facturas_rpt.size > 0 \n\n        Prawn::Document.generate(\"app/pdf_output/rpt_pendientes.pdf\") do |pdf|\n        pdf.font \"Helvetica\"\n        pdf = build_pdf_header_rpt2(pdf)\n        pdf = build_pdf_body_rpt2(pdf)\n        build_pdf_footer_rpt2(pdf)\n\n        $lcFileName =  \"app/pdf_output/rpt_pendientes.pdf\"              \n    end     \n\n    $lcFileName1=File.expand_path('../../../', __FILE__)+ \"/\"+$lcFileName              \n    send_file(\"app/pdf_output/rpt_pendientes.pdf\", :type => 'application/pdf', :disposition => 'inline')\n\n    end \n\n  end\n  \n  ###pendientes de pago detalle\n\n  def rpt_ccobrar4_pdf\n      $lcxCliente =\"0\"\n      @company=Company.find(params[:company_id])          \n      @fecha1 = params[:fecha1]  \n      @fecha2 = params[:fecha2]  \n      @facturas_rpt = @company.get_pendientes_day(@fecha1,@fecha2)  \n      \n      Prawn::Document.generate(\"app/pdf_output/rpt_pendientes4.pdf\") do |pdf|\n          pdf.font \"Helvetica\"\n          pdf = build_pdf_header_rpt4(pdf)\n          pdf = build_pdf_body_rpt4(pdf)\n          build_pdf_footer_rpt4(pdf)\n          $lcFileName =  \"app/pdf_output/rpt_pendientes4.pdf\"              \n      end     \n      $lcFileName1=File.expand_path('../../../', __FILE__)+ \"/\"+$lcFileName              \n      send_file(\"app/pdf_output/rpt_pendientes4.pdf\", :type => 'application/pdf', :disposition => 'inline')\n  \n  end\n  \n\n  def client_data_headers_rpt\n      client_headers  = [[\"Empresa  :\", $lcCli ]]\n      client_headers << [\"Direccion :\", $lcdir1]\n      client_headers\n  end\n\n  def invoice_headers_rpt            \n      invoice_headers  = [[\"Fecha : \",$lcHora]]    \n      invoice_headers\n  end\n def discontinue\n    \n    @facturasselect = Sellvale.find(params[:products_ids])\n\n    for item in @facturasselect\n        begin\n          a = item.id\n          b = Product.find_by(code: item.cod_prod)             \n          descuento =  item.implista - item.importe.to_f\n          preciolista = item.precio.to_f + descuento\n          \n          new_invoice_detail = FacturaDetail.new(factura_id: $lcFacturaId  ,sellvale_id: item.id , product_id: b.id ,price:preciolista, price_discount: item.precio, quantity: item.cantidad,total: item.importe)\n          new_invoice_detail.save\n          a= Sellvale.find(item.id)\n          a.processed ='1'\n          a.save\n          \n        end              \n    end\n    \n    @invoice = Factura.find($lcFacturaId)\n    \n    @invoice[:total] = @invoice.get_subtotal2.round(2)\n    \n    lcTotal = @invoice[:total]  / 1.18\n    @invoice[:subtotal] = lcTotal.round(2)\n    \n    lcTax =@invoice[:total] - @invoice[:subtotal]\n    @invoice[:tax] = lcTax.round(2)\n    \n    @invoice[:balance] = @invoice[:total]\n    @invoice[:pago] = 0\n    @invoice[:charge] = 0\n    @invoice[:descuento] = \"1\"\n    \n    respond_to do |format|\n      if @invoice.save\n        # Create products for kit\n        \n                # Check if we gotta process the invoice\n        \n        format.html { redirect_to(@invoice, :notice => 'Invoice was successfully created.') }\n        format.xml  { render :xml => @invoice, :status => :created, :location => @invoice }\n      else\n        format.html { render :action => \"new\" }\n        format.xml  { render :xml => @invoice.errors, :status => :unprocessable_entity }\n      end\n    end\n    \n    \n    \n     \n  end   \n\ndef print\n          lib = File.expand_path('../../../lib', __FILE__)\n        $LOAD_PATH.unshift(lib) unless $LOAD_PATH.include?(lib)\n        puts \"ruta******\"\n        puts lib \n        \n        \n        \n        require 'sunat'\n        require './config/config'\n        require './app/generators/invoice_generator'\n        require './app/generators/credit_note_generator'\n        require './app/generators/debit_note_generator'\n        require './app/generators/receipt_generator'\n        require './app/generators/daily_receipt_summary_generator'\n        require './app/generators/voided_documents_generator'\n\n        SUNAT.environment = :test \n\n        files_to_clean = Dir.glob(\"*.xml\") + Dir.glob(\"./app/pdf_output/*.pdf\") + Dir.glob(\"*.zip\")\n        files_to_clean.each do |file|\n          File.delete(file)\n        end         \n    \n       if $lcMoneda == \"D\"  \n            $lcFileName=\"\"\n            case_49 = InvoiceGenerator.new(1,3,1,$lg_serie_factura).with_different_currency2\n          #  puts $lcFileName \n       else\n            case_3  = InvoiceGenerator.new(1,3,1,$lg_serie_factura).with_igv2(true)\n       end \n    \n        \n        $lcFileName1=File.expand_path('../../../', __FILE__)+ \"/\"+$lcFileName\n                \n        send_file(\"#{$lcFileName1}\", :type => 'application/pdf', :disposition => 'inline')\n\n        \n        @@document_serial_id =\"\"\n        $aviso=\"\"\n    end \ndef reportep01 \n    \n      @company=Company.find(1)          \n      @fecha1 = params[:fecha1]    \n      @fecha2 = params[:fecha2]    \n      @proveedor = params[:supplier]    \n      \n      @facturas_rpt = @company.get_purchases_5(@fecha1,@fecha2,@proveedor)\n      \n      case params[:print]\n        when \"To PDF\" then \n          begin \n           render  pdf: \"FacturaProveedor \",template: \"purchases/purchase5_rpt.pdf.erb\",locals: {:purchases => @facturas_rpt}\n          \n          end   \n        when \"To Excel\" then render xlsx: 'purchase5_xls'\n        else render action: \"index\"\n      end\n      \n  end\n  \n  \ndef rpt_cobranzas_pdf\n    \n    @company=Company.find(1)      \n   \n    @fecha1 = params[:fecha1]    \n    @fecha2 = params[:fecha2]\n    \n    @tipomoneda = params[:moneda_id]\n\n    @company.actualizar_fecha2\n    @company.actualiza_monthyear\n    \n    @customerpayment_rpt = @company.get_customer_payments2(@tipomoneda,@fecha1,@fecha2)\n  \n    if @customerpayment_rpt != nil \n    \n      case params[:print]\n        when \"To PDF\" then \n            redirect_to :action => \"rpt_ccobrar5_pdf\", :format => \"pdf\", :fecha1 => params[:fecha1], :fecha2 => params[:fecha2], :moneda_id=> params[:moneda_id],:id=>\"1\"\n        when \"To Excel\" then render xlsx: 'rpt_ccobrar5_xls'\n          \n          \n        else render action: \"index\"\n      end\n    end \n  end\n\n\n\ndef rpt_ccobrar5_pdf\n    @company=Company.find(params[:id])      \n    @fecha1 = params[:fecha1]\n    @fecha2 = params[:fecha2]\n    @tipomoneda = params[:moneda_id]\n\n    @company.actualizar_fecha2\n    @company.actualiza_monthyear\n    @customerpayment_rpt = @company.get_customer_payments2(@tipomoneda,@fecha1,@fecha2)\n  \n    if @customerpayment_rpt != nil \n      \n    Prawn::Document.generate \"app/pdf_output/rpt_customerpayment2.pdf\" , :page_layout => :landscape do |pdf|        \n        pdf.font \"Helvetica\"\n        pdf = build_pdf_header_rpt20(pdf)\n        pdf = build_pdf_body_rpt20(pdf)\n        build_pdf_footer_rpt20(pdf)\n        $lcFileName =  \"app/pdf_output/rpt_customerpayment2.pdf\"      \n    end     \n  \n    $lcFileName1=File.expand_path('../../../', __FILE__)+ \"/\"+$lcFileName                \n    send_file(\"#{$lcFileName1}\", :type => 'application/pdf', :disposition => 'inline')\n  end \nend \n\n##-------------------------------------------------------------------------------------\n## REPORTE DE ESTADISTICA DE VENTAS\n##-------------------------------------------------------------------------------------\n  \n  def build_pdf_header_rpt20(pdf)\n     pdf.font \"Helvetica\" , :size => 6\n      \n     $lcCli  = @company.name \n     $lcdir1 = @company.address1+@company.address2+@company.city+@company.state\n\n     $lcFecha1= Date.today.strftime(\"%d/%m/%Y\").to_s\n     $lcHora  = Time.now.to_s\n\n    max_rows = [client_data_headers.length, invoice_headers.length, 0].max\n      rows = []\n      (1..max_rows).each do |row|\n        rows_index = row - 1\n        rows[rows_index] = []\n        rows[rows_index] += (client_data_headers_rpt.length >= row ? client_data_headers_rpt[rows_index] : ['',''])\n        rows[rows_index] += (invoice_headers_rpt.length >= row ? invoice_headers_rpt[rows_index] : ['',''])\n      end\n\n      if rows.present?\n        pdf.table(rows, {\n          :position => :center,\n          :cell_style => {:border_width => 0},\n          :width => pdf.bounds.width\n        }) do\n          columns([0, 2]).font_style = :bold\n\n      end\n\n        pdf.move_down 10\n\n      end\n      \n      pdf \n  end   \n\n  def build_pdf_body_rpt20(pdf)\n    \n    if @tipomoneda == \"1\"\n       @tipomoneda_name =\"DOLARES\"  \n    else\n       @tipomoneda_name =\"SOLES \"  \n    end \n    pdf.text \"Resumen Clientes  Moneda : \"+@tipomoneda_name  + \" Fecha \"+@fecha1.to_s+ \" Mes : \"+@fecha2.to_s , :size => 11 \n    pdf.text \"\"\n    pdf.font \"Helvetica\" , :size => 6\n\n      headers = []\n      table_content = []\n      total_general = 0\n      total_factory = 0\n\n      CustomerPayment::TABLE_HEADERS9.each do |header|\n        cell = pdf.make_cell(:content => header)\n        cell.background_color = \"FFFFCC\"\n        headers << cell\n      end\n      table_content << headers\n      nroitem = 1\n\n      # tabla pivoteadas\n      # hash of hashes\n        # pad columns with spaces and bars from max_lengths\n\n      @total_general = 0\n      @total_anterior = 0\n      @total_cliente = 0 \n      @total_mes01 = 0\n      @total_mes02 = 0\n      @total_mes03 = 0\n      @total_mes04 = 0\n      @total_mes05 = 0\n      @total_mes06 = 0\n      @total_mes07 = 0\n      @total_mes08 = 0\n      @total_mes09 = 0\n      @total_mes10 = 0\n      @total_mes11 = 0\n      @total_mes12 = 0\n      @total_anterior_column = 0\n      @total_mes01_column = 0\n      @total_mes02_column = 0\n      @total_mes03_column = 0\n      @total_mes04_column = 0\n      @total_mes05_column = 0\n      @total_mes06_column = 0\n      @total_mes07_column = 0\n      @total_mes08_column = 0\n      @total_mes09_column = 0\n      @total_mes10_column = 0\n      @total_mes11_column = 0\n      @total_mes12_column = 0\n      \n      lcCli = @customerpayment_rpt.first.customer_id\n      $lcCliName = \"\"\n    \n\n     for  customerpayment_rpt in @customerpayment_rpt\n\n        if lcCli == customerpayment_rpt.customer_id \n\n          $lcCliName = customerpayment_rpt.customer.name  \n          \n          #customerpayment_rpt.balance.round(2) > 0.00\n      \n          if customerpayment_rpt.year_month.to_f <= 201712\n            @total_anterior = @total_anterior + customerpayment_rpt.balance\n          end             \n          \n          if customerpayment_rpt.year_month.to_f >= 201801 and customerpayment_rpt.year_month.to_f <= 201812\n            @total_mes01 = @total_mes01 + customerpayment_rpt.balance\n          end   \n\n          if customerpayment_rpt.year_month == '201901'\n            @total_mes02 = @total_mes02 + customerpayment_rpt.balance\n          end \n            \n          if customerpayment_rpt.year_month == '201902'   \n            @total_mes03 = @total_mes03 + customerpayment_rpt.balance\n          end \n          if customerpayment_rpt.year_month == '201903'     \n            @total_mes04 = @total_mes04 + customerpayment_rpt.balance\n          end \n          if customerpayment_rpt.year_month == '201904'       \n            @total_mes05 = @total_mes05 + customerpayment_rpt.balance\n          end \n          if customerpayment_rpt.year_month == '201905'\n            @total_mes06 = @total_mes06 + customerpayment_rpt.balance\n          end \n          if customerpayment_rpt.year_month == '201906' \n            @total_mes07 = @total_mes07 + customerpayment_rpt.balance\n          end \n          if customerpayment_rpt.year_month == '201907'   \n            @total_mes08 = @total_mes08 + customerpayment_rpt.balance\n          end \n          if customerpayment_rpt.year_month == '201908'     \n            @total_mes09 = @total_mes09 + customerpayment_rpt.balance\n          end \n          if customerpayment_rpt.year_month == '201909'       \n            @total_mes10 = @total_mes10 + customerpayment_rpt.balance\n          end \n          if customerpayment_rpt.year_month == '201910'   \n            @total_mes11 = @total_mes11 + customerpayment_rpt.balance\n          end \n          if customerpayment_rpt.year_month == '201911'     \n            @total_mes12 = @total_mes12 + customerpayment_rpt.balance\n          end   \n            @total_general = @total_general + customerpayment_rpt.balance\n            \n        #end \n          \n        else\n          \n            @total_cliente = @total_anterior+\n            @total_mes01+\n            @total_mes02+\n            @total_mes03+\n            @total_mes04+\n            @total_mes05+\n            @total_mes06+\n            @total_mes07+\n            @total_mes08+\n            @total_mes09+\n            @total_mes10+\n            @total_mes11+\n            @total_mes12\n            \n            row = []\n            row << nroitem.to_s        \n            row << $lcCliName\n            row << sprintf(\"%.2f\",@total_anterior.to_s)\n            row << sprintf(\"%.2f\",@total_mes01.to_s)\n            row << sprintf(\"%.2f\",@total_mes02.to_s)\n            row << sprintf(\"%.2f\",@total_mes03.to_s)\n            row << sprintf(\"%.2f\",@total_mes04.to_s)\n            row << sprintf(\"%.2f\",@total_mes05.to_s)\n            row << sprintf(\"%.2f\",@total_mes06.to_s)\n            row << sprintf(\"%.2f\",@total_mes07.to_s)\n            row << sprintf(\"%.2f\",@total_mes08.to_s)\n            row << sprintf(\"%.2f\",@total_mes09.to_s)\n            row << sprintf(\"%.2f\",@total_mes10.to_s)\n            row << sprintf(\"%.2f\",@total_mes11.to_s)\n            row << sprintf(\"%.2f\",@total_mes12.to_s)\n            row << sprintf(\"%.2f\",@total_cliente.to_s)\n\n            table_content << row            \n            ## TOTAL XMES GENERAL\n            @total_anterior_column = @total_anterior_column + @total_anterior\n            @total_mes01_column = @total_mes01_column +@total_mes01\n            @total_mes02_column = @total_mes02_column +@total_mes02\n            @total_mes03_column = @total_mes03_column +@total_mes03\n            @total_mes04_column = @total_mes04_column +@total_mes04\n            @total_mes05_column = @total_mes05_column +@total_mes05\n            @total_mes06_column = @total_mes06_column +@total_mes06\n            @total_mes07_column = @total_mes07_column +@total_mes07\n            @total_mes08_column = @total_mes08_column +@total_mes08\n            @total_mes09_column = @total_mes09_column +@total_mes09\n            @total_mes10_column = @total_mes10_column +@total_mes10\n            @total_mes11_column = @total_mes11_column +@total_mes11\n            @total_mes12_column = @total_mes12_column +@total_mes12\n            @total_cliente = 0 \n            ## TOTAL XMES GENERAL\n\n            $lcCliName =customerpayment_rpt.customer.name\n            lcCli = customerpayment_rpt.customer_id\n\n            @total_anterior = 0\n            @total_mes01 = 0\n            @total_mes02 = 0\n            @total_mes03 = 0\n            @total_mes04 = 0\n            @total_mes05 = 0\n            @total_mes06 = 0\n            @total_mes07 = 0\n            @total_mes08 = 0\n            @total_mes09 = 0\n            @total_mes10 = 0\n            @total_mes11 = 0\n            @total_mes12 = 0\n            @total_cliente = 0 \n            \n          #if customerpayment_rpt.balance.round(2) > 0.00\n          \n          if customerpayment_rpt.year_month.to_f <= 201712\n            @total_anterior = @total_anterior + customerpayment_rpt.balance\n          end             \n          \n          if customerpayment_rpt.year_month.to_f >= 201801 and customerpayment_rpt.year_month.to_f <= 201812\n            @total_mes01 = @total_mes01 + customerpayment_rpt.balance\n          end   \n\n          if customerpayment_rpt.year_month == '201901'\n            @total_mes02 = @total_mes02 + customerpayment_rpt.balance\n          end \n            \n          if customerpayment_rpt.year_month == '201902'   \n            @total_mes03 = @total_mes03 + customerpayment_rpt.balance\n          end \n          if customerpayment_rpt.year_month == '201903'     \n            @total_mes04 = @total_mes04 + customerpayment_rpt.balance\n          end \n          if customerpayment_rpt.year_month == '201904'       \n            @total_mes05 = @total_mes05 + customerpayment_rpt.balance\n          end \n          if customerpayment_rpt.year_month == '201905'\n            @total_mes06 = @total_mes06 + customerpayment_rpt.balance\n          end \n          if customerpayment_rpt.year_month == '201906' \n            @total_mes07 = @total_mes07 + customerpayment_rpt.balance\n          end \n          if customerpayment_rpt.year_month == '201907'   \n            @total_mes08 = @total_mes08 + customerpayment_rpt.balance\n          end \n          if customerpayment_rpt.year_month == '201908'     \n            @total_mes09 = @total_mes09 + customerpayment_rpt.balance\n          end \n          if customerpayment_rpt.year_month == '201909'       \n            @total_mes10 = @total_mes10 + customerpayment_rpt.balance\n          end \n          if customerpayment_rpt.year_month == '201910'   \n            @total_mes11 = @total_mes11 + customerpayment_rpt.balance\n          end \n          if customerpayment_rpt.year_month == '201911'     \n            @total_mes12 = @total_mes12 + customerpayment_rpt.balance\n          end   \n          \n          nroitem = nroitem + 1 \n      \n          @total_general = @total_general + customerpayment_rpt.balance\n        #end \n       end \n       end   \n       \n\n      #fin for\n          #ultimo cliente \n\n          @total_cliente = @total_anterior+\n          @total_mes01+\n          @total_mes02+\n          @total_mes03+\n          @total_mes04+\n          @total_mes05+\n          @total_mes06+\n          @total_mes07+\n          @total_mes08+\n          @total_mes09+\n          @total_mes10+\n          @total_mes11+\n          @total_mes12\n            @total_anterior_column = @total_anterior_column + @total_anterior\n            @total_mes01_column = @total_mes01_column +@total_mes01\n            @total_mes02_column = @total_mes02_column +@total_mes02\n            @total_mes03_column = @total_mes03_column +@total_mes03\n            @total_mes04_column = @total_mes04_column +@total_mes04\n            @total_mes05_column = @total_mes05_column +@total_mes05\n            @total_mes06_column = @total_mes06_column +@total_mes06\n            @total_mes07_column = @total_mes07_column +@total_mes07\n            @total_mes08_column = @total_mes08_column +@total_mes08\n            @total_mes09_column = @total_mes09_column +@total_mes09\n            @total_mes10_column = @total_mes10_column +@total_mes10\n            @total_mes11_column = @total_mes11_column +@total_mes11\n            @total_mes12_column = @total_mes12_column +@total_mes12\n          \n            row = []\n            row << nroitem.to_s        \n            row << customerpayment_rpt.customer.name  \n            row << sprintf(\"%.2f\",@total_anterior.to_s)\n            row << sprintf(\"%.2f\",@total_mes01.to_s)\n            row << sprintf(\"%.2f\",@total_mes02.to_s)\n            row << sprintf(\"%.2f\",@total_mes03.to_s)\n            row << sprintf(\"%.2f\",@total_mes04.to_s)\n            row << sprintf(\"%.2f\",@total_mes05.to_s)\n            row << sprintf(\"%.2f\",@total_mes06.to_s)\n            row << sprintf(\"%.2f\",@total_mes07.to_s)\n            row << sprintf(\"%.2f\",@total_mes08.to_s)\n            row << sprintf(\"%.2f\",@total_mes09.to_s)\n            row << sprintf(\"%.2f\",@total_mes10.to_s)\n            row << sprintf(\"%.2f\",@total_mes11.to_s)\n            row << sprintf(\"%.2f\",@total_mes12.to_s)\n            row << sprintf(\"%.2f\",@total_cliente.to_s)\n\n            table_content << row            \n            \n\n\n        row = []\n         row << \"\"       \n         row << \" TOTAL GENERAL => \"\n         row << sprintf(\"%.2f\",@total_anterior_column.to_s)\n         row << sprintf(\"%.2f\",@total_mes01_column.to_s)\n         row << sprintf(\"%.2f\",@total_mes02_column.to_s)\n         row << sprintf(\"%.2f\",@total_mes03_column.to_s)\n         row << sprintf(\"%.2f\",@total_mes04_column.to_s)\n         row << sprintf(\"%.2f\",@total_mes05_column.to_s)\n         row << sprintf(\"%.2f\",@total_mes06_column.to_s)\n         row << sprintf(\"%.2f\",@total_mes07_column.to_s)\n         row << sprintf(\"%.2f\",@total_mes08_column.to_s)\n         row << sprintf(\"%.2f\",@total_mes09_column.to_s)\n         row << sprintf(\"%.2f\",@total_mes10_column.to_s)\n         row << sprintf(\"%.2f\",@total_mes11_column.to_s)\n         row << sprintf(\"%.2f\",@total_mes12_column.to_s)\n         row << sprintf(\"%.2f\",@total_general.to_s)\n         \n         table_content << row\n\n\n      result = pdf.table table_content, {:position => :center,\n                                        :header => true,\n                                        :width => pdf.bounds.width\n                                        } do \n                                          columns([0]).align=:center\n                                          columns([1]).align=:left\n                                          columns([2]).align=:right\n                                          columns([3]).align=:right \n                                          columns([4]).align=:right\n                                          columns([5]).align=:right \n                                          columns([6]).align=:right\n                                          columns([7]).align=:right \n                                          columns([8]).align=:right\n                                          columns([9]).align=:right \n                                          columns([10]).align=:right\n                                          columns([11]).align=:right \n                                          columns([12]).align=:right\n                                          columns([13]).align=:right \n                                          columns([14]).align=:right \n                                          columns([15]).align=:right\n                                          \n                                        end                                          \n      pdf.move_down 10      \n      pdf\n\n    end\n\n\n    def build_pdf_footer_rpt20(pdf)\n\n        subtotals = []\n        taxes = []\n        totals = []\n        services_subtotal = 0\n        services_tax = 0\n        services_total = 0\n\n        \n        \n        pdf.text \"\" \n\n        pdf.bounding_box([0, 20], :width => 535, :height => 40) do\n           pdf.draw_text \"Company: #{@company.name} - Created with: #{getAppName()} - #{getAppUrl()}\", :at => [pdf.bounds.left, pdf.bounds.bottom - 20]\n        end\n\n      pdf\n      \n  end\n\ndef client_data_headers\n\n    #{@customerpayment.description}\n      client_headers  = [[\"Proveedor :\", $lcCli ]]\n      client_headers << [\"Direccion :\", $lcdir1]      \n      client_headers\n  end\n\n  def invoice_headers            \n      invoice_headers  = [[\"Fecha Compro. : \",$lcFecha1]]\n      invoice_headers <<  [\"Tipo de moneda : \", $lcMon]    \n      invoice_headers\n  end\n\n  def invoice_summary\n      invoice_summary = []\n      invoice_summary << [\"RECIBI CONFORME \",\"\"]\n      invoice_summary << [\"Fecha  :\",\"\"]\n      invoice_summary << [\"D.N.I. :\",\"Firma\"]\n      invoice_summary << [\"Nombre y Apellidos :\",\"\"]\n      invoice_summary\n  end\n\n\n\n  \n  private\n  def factura_params\n    params.require(:factura).permit(:company_id,:location_id,:division_id,:customer_id,:description,:comments,:code,:subtotal,:tax,:total,:processed,:return,:date_processed,:user_id,:payment_id,:fecha,:preciocigv,:tipo,:observ,:moneda_id,:detraccion,:factura2,:description,:document_id,:tipoventa_id)\n  end\n\nend\n\n\n","undoManager":{"mark":-1,"position":-1,"stack":[]},"ace":{"folds":[],"scrolltop":3685,"scrollleft":0,"selection":{"start":{"row":274,"column":7},"end":{"row":274,"column":7},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":262,"state":"start","mode":"ace/mode/ruby"}},"timestamp":1558458540137}