{"filter":false,"title":"exceptions_controller.rb","tooltip":"/app/controllers/exceptions_controller.rb","undoManager":{"mark":0,"position":0,"stack":[[{"start":{"row":0,"column":0},"end":{"row":48,"column":3},"action":"insert","lines":["class ExceptionsController < ActionController::Base","","     #Response","     respond_to :html, :xml, :json","","     #Details","     before_action :status","","     #Layout","     layout :layout","","     #######################","","     #Show","     def show","           respond_with status: @status","     end","","     #######################","","    protected","","    #Info","    def status","         @exception  = env['action_dispatch.exception']","         @status     = ActionDispatch::ExceptionWrapper.new(env, @exception).status_code","         @response   = ActionDispatch::ExceptionWrapper.rescue_responses[@exception.class.name]","   end","","   #Format","  def details","    @details ||= {}.tap do |h|","       I18n.with_options scope: [:exception, :show, @response], exception_name: @exception.class.name, exception_message: @exception.message do |i18n|","               h[:name]    = i18n.t \"#{@exception.class.name.underscore}.title\", default: i18n.t(:title, default: @exception.class.name)","               h[:message] = i18n.t \"#{@exception.class.name.underscore}.description\", default: i18n.t(:description, default: @exception.message)","           end","      end","  end","  helper_method :details","","     #######################","","     private","","     #Layout","     def layout_status","          @status.to_s == \"404\" ? \"application\" : \"error\"","     end","end"],"id":1}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":48,"column":3},"end":{"row":48,"column":3},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1541017052913,"hash":"13cc00723188864603c08b52ea89df1e384c462e"}